diff --git a/README.md b/README.md
index 7fee9b5..a299f81 100644
--- a/README.md
+++ b/README.md
@@ -1,7 +1,7 @@
-XSN Seeder
+Divi Seeder
 ====================
 
-xsn-seeder is a crawler for the XSN Core network, which
+divi-seeder is a crawler for the Divi Core network, which
 exposes a list of reliable nodes via a built-in DNS server, or instead
 just generates that list to push to a remote CloudFlare server.
 
@@ -68,7 +68,7 @@ virtualenv ./venv
 In the crontab editor, add the lines below:
 
 ```bash
-* * * * * cd {xsn_seeder_path}/cf-uploader && ./venv/bin/python seeder.py >/dev/null 2>&1
+* * * * * cd {divi_seeder_path}/cf-uploader && ./venv/bin/python seeder.py >/dev/null 2>&1
 ```
 
 COMPILING
diff --git a/bitcoin.cpp b/bitcoin.cpp
index e2469cd..0a7ee11 100644
--- a/bitcoin.cpp
+++ b/bitcoin.cpp
@@ -82,7 +82,7 @@ class CNode {
     CAddress me(CService("0.0.0.0"));
     BeginMessage("version");
     int nBestHeight = GetRequireHeight();
-    string ver = "/bitcoin-seeder:0.01/";
+    string ver = "/divi-seeder:0.01/";
     vSend << PROTOCOL_VERSION << nLocalServices << nTime << you << me << nLocalNonce << ver << nBestHeight;
     EndMessage();
   }
diff --git a/cf-uploader/parser.py b/cf-uploader/parser.py
index 85cf433..9fbd554 100644
--- a/cf-uploader/parser.py
+++ b/cf-uploader/parser.py
@@ -52,7 +52,7 @@ def read_hard_seeds(hard_seeds_file):
     return hard_seeds
 
 
-def read_seed_dump(seeds_file, valid_port="62583"):
+def read_seed_dump(seeds_file, valid_port="51472"):
 
     """ Read the good ip addresses from the seeds dump. """
 
diff --git a/cf-uploader/seeder.conf.example b/cf-uploader/seeder.conf.example
index 9c5d58a..ace7f54 100644
--- a/cf-uploader/seeder.conf.example
+++ b/cf-uploader/seeder.conf.example
@@ -1,5 +1,5 @@
 [general]
-domain=xsncoin.io
+domain=www.diviproject.org
 name=autoseeds
 user=your@email.com
 key=XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
diff --git a/db.h b/db.h
index a951b2b..ab0df23 100644
--- a/db.h
+++ b/db.h
@@ -16,7 +16,7 @@
 
 static inline int GetRequireHeight(const bool testnet = fTestNet)
 {
-    return testnet ? 0 : 139417;
+    return testnet ? 0 : 150;
 }
 
 std::string static inline ToString(const CService &ip) {
diff --git a/main.cpp b/main.cpp
index 1f8be4b..c29b9b0 100644
--- a/main.cpp
+++ b/main.cpp
@@ -35,7 +35,7 @@ public:
   CDnsSeedOpts() : nThreads(96), nDnsThreads(4), nPort(53), mbox(NULL), ns(NULL), host(NULL), tor(NULL), fUseTestNet(false), fWipeBan(false), fWipeIgnore(false), ipv4_proxy(NULL), ipv6_proxy(NULL) {}
 
   void ParseCommandLine(int argc, char **argv) {
-    static const char *help = "xsn-seeder\n"
+    static const char *help = "divi-seeder\n"
                               "Usage: %s -h <host> -n <ns> [-m <mbox>] [-t <threads>] [-p <port>]\n"
                               "\n"
                               "Options:\n"
@@ -397,7 +397,7 @@ extern "C" void* ThreadStats(void*) {
   return nullptr;
 }
 
-static const string mainnet_seeds[] = {"autoseeds.xsnseed.xyz", ""};
+static const string mainnet_seeds[] = {"autoseeds.diviseed.diviproject.org", ""};
 static const string testnet_seeds[] = {"127.0.0.1", ""};
 static const string *seeds = mainnet_seeds;
 
@@ -455,10 +455,10 @@ int main(int argc, char **argv) {
   bool fDNS = true;
   if (opts.fUseTestNet) {
       printf("Using testnet.\n");
-      pchMessageStart[0] = 0xce;
-      pchMessageStart[1] = 0xe2;
-      pchMessageStart[2] = 0xca;
-      pchMessageStart[3] = 0xff;
+      pchMessageStart[0] = 0xdf;
+      pchMessageStart[1] = 0xa0;
+      pchMessageStart[2] = 0x8d;
+      pchMessageStart[3] = 0x78;
       seeds = testnet_seeds;
       fTestNet = true;
   }
diff --git a/protocol.cpp b/protocol.cpp
index 8c8e405..4f43d16 100644
--- a/protocol.cpp
+++ b/protocol.cpp
@@ -22,7 +22,7 @@ static const char* ppszTypeName[] =
     "block",
 };
 
-unsigned char pchMessageStart[4] = { 0xbf, 0x0c, 0x6c, 0xbd };
+unsigned char pchMessageStart[4] = { 0xdf, 0xa0, 0x8d, 0x8f };
 
 CMessageHeader::CMessageHeader()
 {
diff --git a/protocol.h b/protocol.h
index 08abcee..cc170be 100644
--- a/protocol.h
+++ b/protocol.h
@@ -18,7 +18,7 @@
 extern bool fTestNet;
 static inline unsigned short GetDefaultPort(const bool testnet = fTestNet)
 {
-    return testnet ? 29999 : 62583;
+    return testnet ? 29999 : 51472;
 }
 
 //
diff --git a/serialize.h b/serialize.h
index cec5c41..1001b46 100644
--- a/serialize.h
+++ b/serialize.h
@@ -60,7 +60,7 @@ class CDataStream;
 class CAutoFile;
 static const unsigned int MAX_SIZE = 0x02000000;
 
-static const int PROTOCOL_VERSION = 70209;
+static const int PROTOCOL_VERSION = 70915;
 
 // Used to bypass the rule against non-const reference to temporary
 // where it makes sense with wrappers such as CFlatData or CTxDB
